# 第 25 天：使用 GitHub 遠端儲存庫 - 觀念篇

上一篇大家學會了如何下載遠端儲存庫 (`git clone`, `git pull`) 與上傳遠端儲存庫 (`git push`)，本篇文章來教大家認識遠端儲存庫的其他細節。



## 與遠端儲存庫有關的指令

* `git clone`

``` 
將**遠端儲存庫**複製到本地，並建立**工作目錄**與**本地儲存庫** (就是 `.git` 資料夾)
```

* `git pull`

``` 
將遠端儲存庫的最新版下載回來，下載的內容包含完整的物件儲存庫(object storage)。並且將遠端分支合併到本地分支。 (將 `origin/master` 遠端分支合併到 `master` 本地分支)

所以一個 `git pull` 動作，完全相等於以下兩段指令：

	git fetch
	git merge origin/master
```

* `git push`

``` 
將本地儲存庫中目前分支的所有相關物件**推送**到遠端儲存庫中。
```

* `git fetch`

``` 
將遠端儲存庫的最新版下載回來，下載的內容包含完整的物件儲存庫(object storage)。
這個命令**不包含**「合併」分支的動作。
```

* `git ls-remote`

``` 
顯示特定遠端儲存庫的參照名稱。包含**遠端分支**與**遠端標籤**。
```

## 關於追蹤分支的概念

我們先前學習過關於「分支」的概念，不過僅限於｢本地分支｣，今天我們多出了個「遠端分支」，事情就相對複雜一些。

基本上，當我們的版本控管流程加上了遠端儲存庫之後，原本的**分支**就可以被拆成四種不同的概念：

1. 遠端追蹤分支

``` 
這個分支位於遠端，目的是用來追蹤分支的變化情形。通常遠端分支你是存取不到的。
```

1. 本地追蹤分支

當你執行 `git clone` 複製一個遠端容器回來之後，所有遠端追蹤分支會被下載回來，並且相對應的建立起一個同名的 **本地追蹤分支**。

我們以複製 jQuery 在 GitHub 上的專案為例，透過 `git clone https://github.com/jquery/jquery.git` 下載回來後，執行 `git branch -a` 指令，顯示出所有「本地分支」與「本地追蹤分支」。「本地追蹤分支」就是如下圖**紅字**的部分：

![image](https://f.cloud.github.com/assets/88981/1405811/8c59cc46-3d3f-11e3-9919-c71b5ccb87ca.png)